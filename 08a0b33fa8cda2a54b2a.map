{"version":3,"sources":["C:/Users/ariel/ceres/Header.js","C:/Users/ariel/ceres/utils.js","C:/Users/ariel/ceres/ImageCard.js","C:/Users/ariel/ceres/ImageViewer.js","C:/Users/ariel/ceres/App.js","C:/Users/ariel/ceres/web-build/register-service-worker.js","C:/Users/ariel/ceres/assets/Euclid.ttf","C:/Users/ariel/ceres/assets/ARI.ttf"],"names":["Header","ui","React","useState","Animated","Value","fadeAnim","useEffect","timing","toValue","header","duration","start","View","style","opacity","marginBottom","marginTop","height","width","fontFamily","fill","stroke","strokeWidth","fontSize","x","y","StyleSheet","create","backgroundColor","marginLeft","fontWeight","letterSpacing","connect","state","webMobile","Platform","OS","Dimensions","get","getRandomInt","min","max","Math","ceil","floor","random","styles","cardContainer","cardWrapper","bottomWrapper","title","textTransform","description","ImageCard","img","i","aspect","setAspect","Image","getSize","url","w","h","Text","wWidth","points","push","pointString","join","console","log","source","uri","marginVertical","ImageViewer","store","imgUrls","AppLoading","alignItems","ScrollView","stickyHeaderIndices","onScroll","event","nativeEvent","contentOffset","dispatch","type","contentContainerStyle","flexGrow","justifyContent","maxWidth","container","map","key","folder","flex","flexDirection","flexWrap","createStore","action","images","data","newImageState","applyMiddleware","thunk","App","props","isLoadingComplete","setLoadingComplete","skipLoadingScreen","StatusBar","hidden","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","a","async","Promise","all","Font","euclid","require","ARI","error","warn","fetch","then","response","json","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.eb6dbb4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Animated, Platform, StyleSheet, Text } from \"react-native\";\r\nimport Svg, { Text as TT } from \"react-native-svg\";\r\n\r\nlet Header = ({ ui }) => {\r\n  const [fadeAnim] = React.useState(new Animated.Value(0)); // Initial value for opacity: 0\r\n  React.useEffect(() => {\r\n    Animated.timing(fadeAnim, {\r\n      toValue: ui.header,\r\n      duration: 1000\r\n    }).start();\r\n  }, [ui.header]);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[{ opacity: fadeAnim, marginBottom: 50, marginTop: 20 }]}\r\n    >\r\n      {/* <Text style={[styles.header]}>ARIEL</Text> */}\r\n      <Svg height=\"150\" width=\"400\">\r\n        <TT\r\n          fontFamily=\"ARI\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          strokeWidth=\"2\"\r\n          fontSize=\"100\"\r\n          x=\"30\"\r\n          y=\"110\"\r\n        >\r\n          ARIEL\r\n        </TT>\r\n      </Svg>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 90,\r\n    backgroundColor: \"#00000000\",\r\n    marginLeft: 20,\r\n    marginTop: 30,\r\n    marginBottom: 70,\r\n    fontFamily: \"ARI\",\r\n    fontWeight: \"700\",\r\n    letterSpacing: 7\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n};\r\n\r\nHeader = connect(mapStateToProps)(Header);\r\nexport default Header;\r\n","import { Dimensions, Platform } from \"react-native\";\r\nexport const webMobile =\r\n  Platform.OS === \"web\" && Dimensions.get(\"window\").width < 768;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Platform\r\n} from \"react-native\";\r\nimport Svg, { Polyline } from \"react-native-svg\";\r\nimport { webMobile } from \"./utils\";\r\nconst lorem =\r\n  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst ImageCard = ({ img, i }) => {\r\n  const [aspect, setAspect] = useState(0);\r\n  Image.getSize(img.url, (w, h) => setAspect(w / h));\r\n  if (!aspect) return <Text>FREG</Text>;\r\n  const wWidth = Dimensions.get(\"window\").width;\r\n  const width = wWidth > 500 ? 500 : wWidth;\r\n  const height = width / aspect;\r\n\r\n  const points = [];\r\n  const divisor = 25;\r\n  const multiplier = 400;\r\n  const pusher = 15;\r\n  for (let i = 0; i < divisor; i++) {\r\n    const x =\r\n      i === 0\r\n        ? pusher\r\n        : getRandomInt(\r\n            (i * multiplier) / divisor,\r\n            (i * multiplier) / divisor + pusher\r\n          );\r\n    const y = getRandomInt(0, 100);\r\n    points.push(`${x},${y}`);\r\n  }\r\n  const pointString = points.join(\" \");\r\n  console.log(Platform.OS !== \"web\" || webMobile);\r\n  return (\r\n    <View\r\n      style={[\r\n        {\r\n          width: wWidth < 500 ? wWidth : 500,\r\n          marginTop: i && Platform.OS === \"web\" ? 100 : 0\r\n        },\r\n        styles.cardContainer\r\n      ]}\r\n    >\r\n      <View>\r\n        <Image\r\n          style={[{ width, height }]}\r\n          source={{\r\n            uri: img.url\r\n          }}\r\n        />\r\n        <View style={{ marginTop: 4 }}>\r\n          <View style={styles.bottomWrapper}>\r\n            <Text style={styles.title}>{img.title}</Text>\r\n            <Text style={styles.description}>{lorem}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      {(Platform.OS !== \"web\" || webMobile) && (\r\n        <Svg width={wWidth} height=\"100px\" style={{ marginVertical: 20 }}>\r\n          <Polyline\r\n            points={pointString}\r\n            fill=\"none\"\r\n            stroke=\"black\"\r\n            strokeWidth=\"3\"\r\n          />\r\n        </Svg>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    marginBottom: 20\r\n  },\r\n  cardWrapper: {\r\n    width: 500\r\n  },\r\n  bottomWrapper: {\r\n    width: \"86%\",\r\n    marginLeft: 10\r\n  },\r\n  title: {\r\n    marginTop: 15,\r\n    fontFamily: \"ARI\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 31,\r\n    textTransform: \"capitalize\",\r\n    letterSpacing: 4\r\n  },\r\n  description: {\r\n    marginTop: 10,\r\n    marginLeft: 20,\r\n    fontSize: 15,\r\n    width: 350,\r\n    fontFamily: \"euclid\"\r\n  }\r\n});\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport { AppLoading } from \"expo\";\r\nimport { connect } from \"react-redux\";\r\nimport { StyleSheet, ScrollView, View, s } from \"react-native\";\r\nimport Header from \"./Header\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nlet ImageViewer = store => {\r\n  if (!store.imgUrls) return <AppLoading />;\r\n\r\n  const handleScroll = event => {\r\n    const y = event.nativeEvent.contentOffset.y;\r\n    if (y >= 100) {\r\n      store.dispatch({ type: \"HIDE_HEADER\" });\r\n    } else {\r\n      store.dispatch({ type: \"SHOW_HEADER\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\" }}>\r\n      <ScrollView\r\n        stickyHeaderIndices={[0]}\r\n        onScroll={handleScroll}\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n          justifyContent: \"space-between\",\r\n          maxWidth: 1200\r\n        }}\r\n      >\r\n        <Header />\r\n        <View style={styles.container}>\r\n          {store.imgUrls.map((img, i) => {\r\n            return (\r\n              <ImageCard key={`${img.folder}-${img.title}`} img={img} i={i} />\r\n            );\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffff\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-around\"\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n};\r\n\r\nImageViewer = connect(mapStateToProps)(ImageViewer);\r\nexport default ImageViewer;\r\n","import React, { useState } from \"react\";\nimport { StatusBar, View } from \"react-native\";\nimport { AppLoading } from \"expo\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport ImageViewer from \"./ImageViewer\";\nimport * as Font from \"expo-font\";\n\nfunction reducer(state = { imgUrls: [], ui: { header: 1 } }, action) {\n  switch (action.type) {\n    case \"FETCH\":\n      const images = action.data.map(({ title, description, url }) => {\n        return { title, description, url };\n      });\n\n      const newImageState = {\n        ...state,\n        imgUrls: [...state.imgUrls, ...images]\n      };\n      return newImageState;\n    case \"HIDE_HEADER\":\n      return { ...state, ui: { header: 0 } };\n    case \"SHOW_HEADER\":\n      return { ...state, ui: { header: 1 } };\n    default:\n      return state;\n  }\n}\nfunction fetchEntries() {\n  return function(dispatch) {\n    fetch(\"https://chimpstagram-upload.glitch.me/getgrams\")\n      .then(response => response.json())\n      .then(data => dispatch({ type: \"FETCH\", data }));\n  };\n}\nconst store = createStore(reducer, applyMiddleware(thunk));\nstore.dispatch(fetchEntries());\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  }\n  return (\n    <Provider store={store}>\n      <StatusBar hidden={true} />\n      <ImageViewer />\n    </Provider>\n  );\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    // Asset.loadAsync([\n    //   require('./assets/images/robot-dev.png'),\n    //   require('./assets/images/robot-prod.png'),\n    // ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\n      // remove this if you are not using it in your app\n      euclid: require(\"./assets/Euclid.ttf\"),\n      ARI: require(\"./assets/ARI.ttf\")\n    })\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/ceres/expo-service-worker.js', { scope: '/ceres/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Euclid.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/ARI.ttf\";"],"sourceRoot":""}